<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xorm on 漫步云端</title><link>https://blog.marvel6.cn/tags/xorm/</link><description>Recent content in Xorm on 漫步云端</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 23 Jan 2020 15:28:33 +0800</lastBuildDate><atom:link href="https://blog.marvel6.cn/tags/xorm/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang 错误处理实践</title><link>https://blog.marvel6.cn/2021/06/golang-error-handle-practice/</link><pubDate>Sat, 05 Jun 2021 21:19:16 +0800</pubDate><guid>https://blog.marvel6.cn/2021/06/golang-error-handle-practice/</guid><description>任何语言，错误处理都是至关重要的，开发人员只有学会正确地处理错误，才可能写出健壮的程序。本文主要介绍使用 Golang 这门语言在错误处理方面的一些实践，</description></item><item><title>借助 Goconvey 和 Sqlmock 对基于 Xorm 的 DB 操作进行单元测试和 Mock</title><link>https://blog.marvel6.cn/2020/01/test-and-mock-db-by-xorm-with-the-help-of-convey-and-sqlmock/</link><pubDate>Thu, 23 Jan 2020 15:28:33 +0800</pubDate><guid>https://blog.marvel6.cn/2020/01/test-and-mock-db-by-xorm-with-the-help-of-convey-and-sqlmock/</guid><description>一直以来，团队同学（也包括我自己）对单元测试不够重视，代码覆盖率几乎等于 0， 最直接的后果是代码 bug 率较高，重构困难。从 PHP 转为 Golang 开发已有一年多，</description></item><item><title>详解 hystrix-go Command 配置参数</title><link>https://blog.marvel6.cn/2019/12/hystrixgo-command-config-introduction/</link><pubDate>Mon, 30 Dec 2019 21:16:54 +0800</pubDate><guid>https://blog.marvel6.cn/2019/12/hystrixgo-command-config-introduction/</guid><description>hystrix 是 Netflix 开源的一个非常强大的熔断降级组件， 用 Java 实现， 而 hystrix-go 是其 Go 版本的一个实现。本文主要介绍 Command 配置涉及的 5 个参数。 CommandConfig 结构体如下： type CommandConfig struct { Timeout int `json:&amp;#34;timeout&amp;#34;` MaxConcurrentRequests</description></item><item><title>Leetcode 题解：完全平方数</title><link>https://blog.marvel6.cn/2019/12/leetcode-perfect-squares/</link><pubDate>Sun, 08 Dec 2019 19:34:46 +0800</pubDate><guid>https://blog.marvel6.cn/2019/12/leetcode-perfect-squares/</guid><description>问题 给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, &amp;hellip;）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。 示例 1: 输入：</description></item><item><title>在 GitHub Pages 托管用 Hugo 创建的静态博客</title><link>https://blog.marvel6.cn/2019/12/hosting-hugo-blog-on-github-pages/</link><pubDate>Sun, 01 Dec 2019 11:51:45 +0800</pubDate><guid>https://blog.marvel6.cn/2019/12/hosting-hugo-blog-on-github-pages/</guid><description>背景 我用Hugo生成的静态博客部署在腾讯云CVM上，只有一个实例，存在单点风险，也不能实现负载均衡。所以想托管在GitHub Pages，本文</description></item><item><title>批量删除自己的Github仓库</title><link>https://blog.marvel6.cn/2019/11/delete-my-github-repos-in-bulk/</link><pubDate>Mon, 25 Nov 2019 18:22:18 +0800</pubDate><guid>https://blog.marvel6.cn/2019/11/delete-my-github-repos-in-bulk/</guid><description>背景 fork了很多代码库，现在想批量删除，只保留自己创建的代码库。 解决方法： 使用Github提供的开发者API 1. 创建token 登录Githu</description></item><item><title>图解 Go 并发编程</title><link>https://blog.marvel6.cn/2019/02/learning-go-concurrency-through-illustrations/</link><pubDate>Fri, 15 Feb 2019 17:02:18 +0800</pubDate><guid>https://blog.marvel6.cn/2019/02/learning-go-concurrency-through-illustrations/</guid><description>你很可能从某种途径听说过 Go 语言。它越来越受欢迎，并且有充分的理由可以证明。 Go 快速、简单，有强大的社区支持。学习这门语言最令人兴奋的一点是它的</description></item><item><title>Golang 笔记之 nil slice 和 empty slice</title><link>https://blog.marvel6.cn/2018/11/golang-nil-empty-slice/</link><pubDate>Tue, 13 Nov 2018 13:34:18 +0800</pubDate><guid>https://blog.marvel6.cn/2018/11/golang-nil-empty-slice/</guid><description>slice 表示底层数组的一个分片，内部数据结构包含三个字段：指向底层数组的指针 (ptr)、数组分片的长度 (len) 和底层数组大小 (cap) ，示意图如下： 1. 初步了解 首</description></item><item><title>检测 Go 程序中按值传递的 locks</title><link>https://blog.marvel6.cn/2018/08/detect-locks-passed-by-value-in-go/</link><pubDate>Sat, 11 Aug 2018 20:02:18 +0800</pubDate><guid>https://blog.marvel6.cn/2018/08/detect-locks-passed-by-value-in-go/</guid><description>检测 Go 程序中按值传递的 locks go tool vet -copylocks 命令简介 Go 语言安装包附带 vet 命令行工具。该工具能对程序源码运行一套启发式算法以发现可疑的程序结构，如无法执行的</description></item></channel></rss>